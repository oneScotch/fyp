import numpy as np
import torch
def get_smplx_joint_names():
    return [
        'pelvis',
        'left_hip',
        'right_hip',
        'spine1',
        'left_knee',
        'right_knee',
        'spine2',
        'left_ankle',
        'right_ankle',
        'spine3',
        'left_foot',
        'right_foot',
        'neck',
        'left_collar',
        'right_collar',
        'head',
        'left_shoulder',
        'right_shoulder',
        'left_elbow',
        'right_elbow',
        'left_wrist',
        'right_wrist',
        'jaw',
        'left_eye_smplhf',
        'right_eye_smplhf',
        'left_index1',
        'left_index2',
        'left_index3',
        'left_middle1',
        'left_middle2',
        'left_middle3',
        'left_pinky1',
        'left_pinky2',
        'left_pinky3',
        'left_ring1',
        'left_ring2',
        'left_ring3',
        'left_thumb1',
        'left_thumb2',
        'left_thumb3',
        'right_index1',
        'right_index2',
        'right_index3',
        'right_middle1',
        'right_middle2',
        'right_middle3',
        'right_pinky1',
        'right_pinky2',
        'right_pinky3',
        'right_ring1',
        'right_ring2',
        'right_ring3',
        'right_thumb1',
        'right_thumb2',
        'right_thumb3',
        'nose',
        'right_eye',
        'left_eye',
        'right_ear',
        'left_ear',
        'left_big_toe',
        'left_small_toe',
        'left_heel',
        'right_big_toe',
        'right_small_toe',
        'right_heel',
        'left_thumb',
        'left_index',
        'left_middle',
        'left_ring',
        'left_pinky',
        'right_thumb',
        'right_index',
        'right_middle',
        'right_ring',
        'right_pinky',
        'right_eye_brow1',
        'right_eye_brow2',
        'right_eye_brow3',
        'right_eye_brow4',
        'right_eye_brow5',
        'left_eye_brow5',
        'left_eye_brow4',
        'left_eye_brow3',
        'left_eye_brow2',
        'left_eye_brow1',
        'nose1',
        'nose2',
        'nose3',
        'nose4',
        'right_nose_2',
        'right_nose_1',
        'nose_middle',
        'left_nose_1',
        'left_nose_2',
        'right_eye1',
        'right_eye2',
        'right_eye3',
        'right_eye4',
        'right_eye5',
        'right_eye6',
        'left_eye4',
        'left_eye3',
        'left_eye2',
        'left_eye1',
        'left_eye6',
        'left_eye5',
        'right_mouth_1',
        'right_mouth_2',
        'right_mouth_3',
        'mouth_top',
        'left_mouth_3',
        'left_mouth_2',
        'left_mouth_1',
        'left_mouth_5',  # 59 in OpenPose output
        'left_mouth_4',  # 58 in OpenPose output
        'mouth_bottom',
        'right_mouth_4',
        'right_mouth_5',
        'right_lip_1',
        'right_lip_2',
        'lip_top',
        'left_lip_2',
        'left_lip_1',
        'left_lip_3',
        'lip_bottom',
        'right_lip_3',
        # Face contour
        'right_contour_1',
        'right_contour_2',
        'right_contour_3',
        'right_contour_4',
        'right_contour_5',
        'right_contour_6',
        'right_contour_7',
        'right_contour_8',
        'contour_middle',
        'left_contour_8',
        'left_contour_7',
        'left_contour_6',
        'left_contour_5',
        'left_contour_4',
        'left_contour_3',
        'left_contour_2',
        'left_contour_1',
    ]

def get_hands_mean():
    hands_meanr = np.array([ 0.11167871, -0.04289218,  0.41644183,  0.10881133,  0.06598568,
        0.75622   , -0.09639297,  0.09091566,  0.18845929, -0.11809504,
       -0.05094385,  0.5295845 , -0.14369841, -0.0552417 ,  0.7048571 ,
       -0.01918292,  0.09233685,  0.3379135 , -0.45703298,  0.19628395,
        0.6254575 , -0.21465237,  0.06599829,  0.50689423, -0.36972436,
        0.06034463,  0.07949023, -0.1418697 ,  0.08585263,  0.63552827,
       -0.3033416 ,  0.05788098,  0.6313892 , -0.17612089,  0.13209307,
        0.37335458,  0.8509643 , -0.27692273,  0.09154807, -0.49983943,
       -0.02655647, -0.05288088,  0.5355592 , -0.04596104,  0.27735803]).reshape(15, -1)
    hands_meanl = np.array([ 0.11167871,  0.04289218, -0.41644183,  0.10881133, -0.06598568,
       -0.75622   , -0.09639297, -0.09091566, -0.18845929, -0.11809504,
        0.05094385, -0.5295845 , -0.14369841,  0.0552417 , -0.7048571 ,
       -0.01918292, -0.09233685, -0.3379135 , -0.45703298, -0.19628395,
       -0.6254575 , -0.21465237, -0.06599829, -0.50689423, -0.36972436,
       -0.06034463, -0.07949023, -0.1418697 , -0.08585263, -0.63552827,
       -0.3033416 , -0.05788098, -0.6313892 , -0.17612089, -0.13209307,
       -0.37335458,  0.8509643 ,  0.27692273, -0.09154807, -0.49983943,
        0.02655647,  0.05288088,  0.5355592 ,  0.04596104, -0.27735803]).reshape(15, -1)
    
    return hands_meanl, hands_meanr

def get_reference_rotations():
    reference_rotation = torch.tensor([1, 0, 0, 0])
    return reference_rotation.expand(54,4)